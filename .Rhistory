x = "UMAP1", y = "UMAP2", color = "Membership") +
theme_bw()
annotations <- c("Mito", "Mito.IMS", "Mito.Matrix", "Mito.MIM", "Mito.MOM",
"OXPHOS", "mtComplexI", "Golgi.Genes", "Lysosome.Genes",
"ER.genes", "Cytoplasm", "Nucleus",
"Autophagy", "SynGO", "Endo_iN_curated_Hundley",
"Presynaptic", "Postsynaptic", "NeuroDev","EndoLyso","EarlyEndosome", "RecyclingEndosome")
binary_matrix <- complete_data_annotated_day50 %>%
select(Genes, all_of(annotations)) %>%
distinct(Genes, .keep_all = TRUE) %>%
tibble::column_to_rownames("Genes")
set.seed(123)
umap_res <- uwot::umap(feat_mat, n_neighbors = 8, min_dist = 0.01, metric = "manhattan")
umap_df <- as.data.frame(umap_res) %>%
mutate(Genes = rownames(feat_mat)) %>%
left_join(tibble::rownames_to_column(binary_matrix, "Genes"), by = "Genes")
umap_df <- umap_df %>%
mutate(Lysosome_Label = factor(Lysosome.Genes, levels = c(FALSE, TRUE),
labels = c("Not Lysosomal", "Lysosomal")))
#Facet across organelles
library(tidyr)
# Reshape to long format: one row per Gene × Organelle
umap_long <- umap_df %>%
select(V1, V2, Genes, all_of(annotations)) %>%
pivot_longer(cols = all_of(annotations), names_to = "Organelle", values_to = "Membership") %>%
mutate(Membership = factor(Membership, levels = c(FALSE, TRUE), labels = c("No", "Yes")))
# Plot with facets
ggplot(umap_long, aes(V1, V2, color = Membership)) +
geom_point(size = 0.5, alpha = 0.7) +
scale_color_manual(values = c("No" = "grey90", "Yes" = "#2166AC")) +
facet_wrap(~ Organelle, ncol = 4) +
labs(title = "UMAP: Organelle Membership by Protein",
x = "UMAP1", y = "UMAP2", color = "Member") +
theme_bw(base_size = 8)
umap1
#4. Plot
ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = coef)) +
geom_point(alpha = 0.8, size = 1.5) +
#scale_color_viridis_d()+
scale_color_manual(values = custom_colors) +
theme_bw(base_size = 10) +
labs(
color = "Mean logFC", title = "UMAP of Genes by logFC across Conditions", color = "Group (coef)")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
library(tidyr)
library(dplyr)
library(umap)
library(ggplot2)
# Pivot to wide: genes x coefficients matrix
logfc_wide <- results_all_df %>%
select(Genes, coef, log2FoldChange) %>%
pivot_wider(names_from = coef, values_from = log2FoldChange)
# Store gene metadata
gene_ids <- logfc_wide$Genes
logfc_mat <- as.matrix(logfc_wide[,-1])  # remove Genes column
rownames(logfc_mat) <- gene_ids
# 2. Run UMAP (genes as rows)
set.seed(123)
#umap_genes <- umap(logfc_mat)
umap_genes <- umap(logfc_mat, n_neighbors = 10, min_dist = 0.01, metric = "manhattan")
umap_df <- as.data.frame(umap_genes$layout)
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$Genes <- rownames(logfc_mat)
#  3. Merge back metadata (e.g., from which coef the gene was significant)
gene_group <- results_all_df %>%
group_by(Genes) %>%
slice_max(order_by = abs(log2FoldChange), n = 1, with_ties = FALSE) %>%
select(Genes, coef)
umap_df <- left_join(umap_df, gene_group, by = "Genes")
n_groups <- length(unique(umap_df$coef))
custom_colors <- colorRampPalette(rev(brewer.pal(11, "Paired")))(n_groups)
#4. Plot
ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = coef)) +
geom_point(alpha = 0.8, size = 1.5) +
#scale_color_viridis_d()+
scale_color_manual(values = custom_colors) +
theme_bw(base_size = 10) +
labs(
color = "Mean logFC", title = "UMAP of Genes by logFC across Conditions", color = "Group (coef)")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
umap_df$cluster <- kmeans(umap_res, centers = 6)$cluster
# 1. Reshape results_all_df into a wide matrix: genes × coefficients
# Pivot to wide format: each gene's logFC across all coefficients
limma_UMAP_logfc_matrix <- results_all_df %>%
select(Genes, coef, logFC) %>%
pivot_wider(names_from = coef, values_from = logFC) %>%
column_to_rownames("Genes")
# Optional: filter genes with too many NAs
limma_UMAP_logfc_matrix <- limma_UMAP_logfc_matrix[rowSums(is.na(limma_UMAP_logfc_matrix)) < 0.5 * ncol(limma_UMAP_logfc_matrix), ]
# Impute missing logFC with 0 or row/column mean (simplest: 0)
limma_UMAP_logfc_matrix[is.na(limma_UMAP_logfc_matrix)] <- 0
# 2. Run UMAP on logFC matrix
set.seed(123)
umap_res <- umap(limma_UMAP_logfc_matrix, n_neighbors = 10, min_dist = 0.1, metric = "manhattan")
umap_df <- as.data.frame(umap_genes$layout)
#umap_df <- as.data.frame(umap_res)
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$Genes <- rownames(limma_UMAP_logfc_matrix)
# 3. Merge with average logFC or metadata (optional)
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE))
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
# 4. Plot using ggplot
umap1 <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
#scale_color_gradient2(low = "#1465AC", high = "#B31B21", midpoint = 0) +
scale_color_gradientn(
colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(100)
) +
theme_bw(base_size = 10) +
labs(
color = "Mean logFC", title = "UMAP of genes across 72 coefficients")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
umap1
# Alternative: Color by cluster
umap_df$cluster <- kmeans(umap_res, centers = 6)$cluster
# Alternative: Color by cluster
umap_df$cluster <- kmeans(umap_res, centers = 6)$cluster
# Alternative: Color by cluster
# Extract UMAP coordinates
umap_coords <- umap_res$layout
# Run k-means on UMAP layout
kres <- kmeans(umap_coords, centers = 6)
# Create UMAP data frame if not done already
umap_df <- as.data.frame(umap_coords)
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$cluster <- factor(kres$cluster)
clusterumap <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = factor(cluster))) +
geom_point(size = 1.2) +
theme_minimal() +
labs(color = "Cluster")
clusterumap
# Alternative: Color by cluster
# Extract UMAP coordinates
umap_coords <- umap_df$layout
# Run k-means on UMAP layout
kres <- kmeans(umap_coords, centers = 6)
# color. by cluster
# Run k-means on UMAP layout
kres <- kmeans(umap_coords, centers = 6)
# Create UMAP data frame
umap_df <- as.data.frame(umap_coords)
# 1. Reshape results_all_df into a wide matrix: genes × coefficients
# Pivot to wide format: each gene's logFC across all coefficients
limma_UMAP_logfc_matrix <- results_all_df %>%
select(Genes, coef, logFC) %>%
pivot_wider(names_from = coef, values_from = logFC) %>%
column_to_rownames("Genes")
# Optional: filter genes with too many NAs
limma_UMAP_logfc_matrix <- limma_UMAP_logfc_matrix[rowSums(is.na(limma_UMAP_logfc_matrix)) < 0.5 * ncol(limma_UMAP_logfc_matrix), ]
# Impute missing logFC with 0 or row/column mean (simplest: 0)
limma_UMAP_logfc_matrix[is.na(limma_UMAP_logfc_matrix)] <- 0
# 2. Run UMAP on logFC matrix
set.seed(123)
umap_res <- umap(limma_UMAP_logfc_matrix, n_neighbors = 10, min_dist = 0.1, metric = "manhattan")
umap_df <- as.data.frame(umap_genes$layout)
#umap_df <- as.data.frame(umap_res)
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$Genes <- rownames(limma_UMAP_logfc_matrix)
# 3. Merge with average logFC or metadata (optional)
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE))
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
# 4. Plot using ggplot
umap1 <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
#scale_color_gradient2(low = "#1465AC", high = "#B31B21", midpoint = 0) +
scale_color_gradientn(
colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(100)
) +
theme_bw(base_size = 10) +
labs(
color = "Mean logFC", title = "UMAP of genes across 72 coefficients")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
umap1
# color. by cluster
# Run k-means on UMAP layout
kres <- kmeans(umap_coords, centers = 6)
# color. by cluster
umap_coords <- umap_res
# Run k-means on UMAP layout
kres <- kmeans(umap_coords, centers = 6)
# color. by cluster
umap_coords <- umap_res$embedding
# Run k-means on UMAP layout
kres <- kmeans(umap_coords, centers = 6)
str(umap_res)
umap_coords
umap_res
# 2. Run UMAP (uwot::umap returns matrix directly)
set.seed(123)
umap_res <- umap(limma_UMAP_logfc_matrix, n_neighbors = 10, min_dist = 0.1, metric = "manhattan")
# 3. K-means clustering
kres <- kmeans(umap_res, centers = 6)
# 1. Reshape results_all_df into a wide matrix: genes × coefficients
# Pivot to wide format: each gene's logFC across all coefficients
limma_UMAP_logfc_matrix <- results_all_df %>%
select(Genes, coef, logFC) %>%
pivot_wider(names_from = coef, values_from = logFC) %>%
column_to_rownames("Genes")
# Optional: filter genes with too many NAs
limma_UMAP_logfc_matrix <- limma_UMAP_logfc_matrix[rowSums(is.na(limma_UMAP_logfc_matrix)) < 0.5 * ncol(limma_UMAP_logfc_matrix), ]
# Impute missing logFC with 0 or row/column mean (simplest: 0)
limma_UMAP_logfc_matrix[is.na(limma_UMAP_logfc_matrix)] <- 0
umap_df <- as.data.frame(umap_genes$layout)
# 3. K-means clustering
kres <- kmeans(umap_res, centers = 6)
umap_df <- as.data.frame(umap_genes$layout)
# 3. K-means clustering
kres <- kmeans(umap_df, centers = 6)
# 4. Create UMAP dataframe
umap_df <- as.data.frame(umap_res)
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$cluster <- factor(kres$cluster)
# 5. Plot by cluster
ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
theme_minimal() +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC")
# 2. Run UMAP on logFC matrix
set.seed(123)
umap_res <- umap(limma_UMAP_logfc_matrix, n_neighbors = 10, min_dist = 0.1, metric = "manhattan")
umap_df <- as.data.frame(umap_genes$layout)
# 3. K-means clustering
kres <- kmeans(umap_df, centers = 12)
# 4. Create UMAP dataframe
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$cluster <- factor(kres$cluster)
# 5. Plot by cluster
ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
theme_minimal() +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC")
umap_df$Genes <- rownames(limma_UMAP_logfc_matrix)
# 3. Merge with average logFC or metadata (optional)
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE))
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
# 4. Plot using ggplot
umap1 <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
#scale_color_gradient2(low = "#1465AC", high = "#B31B21", midpoint = 0) +
scale_color_gradientn(
colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(100)
) +
theme_bw(base_size = 10) +
labs(
color = "Mean logFC", title = "UMAP of genes across 72 coefficients")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
umap1
# 3. K-means clustering
kres <- kmeans(umap_df, centers = 18)
# 3. K-means clustering
kres <- kmeans(umap_df, centers = 18)
umap_df <- as.data.frame(umap_genes$layout)
# 3. K-means clustering
kres <- kmeans(umap_df, centers = 18)
# 4. Create UMAP dataframe
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$cluster <- factor(kres$cluster)
umap_df$Genes <- rownames(limma_UMAP_logfc_matrix)
# 3. Merge with average logFC or metadata (optional)
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE))
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
# 5. Plot by cluster
ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
theme_minimal() +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC")
# 4. Plot using ggplot
umap1 <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
#scale_color_gradient2(low = "#1465AC", high = "#B31B21", midpoint = 0) +
scale_color_gradientn(
colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(100)
) +
theme_bw(base_size = 10) +
labs(
color = "Mean logFC", title = "UMAP of genes across 72 coefficients")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
umap1
ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
# 4. Create UMAP dataframe
colnames(umap_df) <- c("UMAP1", "UMAP2")
umap_df$cluster <- factor(kres$cluster)
umap_df$Genes <- rownames(limma_UMAP_logfc_matrix)
# 3. Merge with average logFC or metadata (optional)
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE))
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
# Add coef metadata
gene_group <- results_all_df %>%
group_by(Genes) %>%
slice_max(order_by = abs(log2FoldChange), n = 1, with_ties = FALSE) %>%
select(Genes, coef)
umap_df <- left_join(umap_df, gene_group, by = "Genes")
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE)) %>%
slice_max(order_by = abs(log2FoldChange), n = 1, with_ties = FALSE) %>%
select(Genes, coef)
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE)) %>%
slice_max(order_by = abs(results_all_df$log2FoldChange), n = 1, with_ties = FALSE) %>%
select(Genes, coef)
# 3. Merge with average logFC or metadata (optional)
gene_meta <- results_all_df %>%
group_by(Genes) %>%
summarise(mean_logFC = mean(logFC, na.rm = TRUE))
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
gene_group <- results_all_df %>%
group_by(Genes) %>%
slice_max(order_by = abs(log2FoldChange), n = 1, with_ties = FALSE) %>%
select(Genes, coef)
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
umap_df <- umap_df %>%
distinct(Genes, .keep_all = TRUE)
umap_df <- left_join(umap_df, gene_meta, by = "Genes")
umap_df <- left_join(umap_df, gene_group, by = "Genes")
# 5. Plot by cluster
ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
# 4. Plot using ggplot
umap1 <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
#scale_color_gradient2(low = "#1465AC", high = "#B31B21", midpoint = 0) +
scale_color_gradientn(
colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(100)
) +
theme_bw(base_size = 10) +
labs(
color = "Mean logFC", title = "UMAP of genes across 72 coefficients")+
theme(panel.grid = element_blank(),
legend.position = "bottom")
umap1
# Plot 3: coef
umap_limma_coef <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = coef)) +
geom_point(alpha = 0.8, size = 1.5) +
#scale_color_viridis_d()+
scale_color_manual(values = custom_colors) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of Genes by logFC across Conditions", color = "Group (coef)")+
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster
# Plot 1: Cluster
umap_limma_cluster <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC") +
theme(panel.grid = element_blank(), legend.position = "bottom")
# Plot 2: logFC
umap_limma_logFC <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
scale_color_gradientn(colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(100)) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of genes across coefficients") +
theme(panel.grid = element_blank(), legend.position = "bottom")
# Plot 3: coef
umap_limma_coef <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = coef)) +
geom_point(alpha = 0.8, size = 1.5) +
#scale_color_viridis_d()+
scale_color_manual(values = custom_colors) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of Genes by logFC across Conditions", color = "Group (coef)")+
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster
umap_limma_logFC
umap_limma_coef
# Plot 1: Cluster
umap_limma_cluster <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
scale_color_gradientn(colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(18)) +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster
# Plot 1: Cluster
umap_limma_cluster <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
scale_color_discrete(palette = "Paired") +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
scale_color_brewer(palette = "Paired") +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster
library(RColorBrewer)
library(scales)
# Create 18-color palette by interpolating
my_colors <- colorRampPalette(brewer.pal(9, "Set1"))(18)
# Plot 1: Cluster
umap_limma_cluster <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
scale_color_manual(values = my_colors) +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster
# Create 18-color palette by interpolating
my_colors <- colorRampPalette(brewer.pal(9, "Paired"))(18)
umap_limma_cluster <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
scale_color_manual(values = my_colors) +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster
# Create 18-color palette by interpolating
my_colors <- colorRampPalette(brewer.pal(9, "Set3"))(18)
# Plot 1: Cluster
umap_limma_cluster <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = cluster)) +
geom_point(size = 1.2) +
scale_color_manual(values = my_colors) +
theme_bw(base_size = 10) +
labs(color = "Cluster", title = "UMAP Clustering of Genes by logFC") +
theme(panel.grid = element_blank(), legend.position = "bottom")
# Plot 2: logFC
umap_limma_logFC <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
scale_color_gradientn(colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(100)) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of genes across coefficients") +
theme(panel.grid = element_blank(), legend.position = "bottom")
# Plot 3: coef
umap_limma_coef <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = coef)) +
geom_point(alpha = 0.8, size = 1.5) +
#scale_color_viridis_d()+
scale_color_manual(values = custom_colors) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of Genes by logFC across Conditions", color = "Group (coef)")+
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_cluster
umap_limma_cluster
# Plot 2: logFC
umap_limma_logFC <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
scale_color_gradientn(colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(60)) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of genes across coefficients") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_logFC
# Plot 2: logFC
umap_limma_logFC <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
scale_color_gradientn(colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(12)) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of genes across coefficients") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_logFC
# Plot 2: logFC
umap_limma_logFC <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = mean_logFC)) +
geom_point(size = 1.2, alpha = 0.8) +
scale_color_gradientn(colors = colorRampPalette(rev(brewer.pal(n = 11, name = "RdBu")))(9)) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of genes across coefficients") +
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_logFC
custom_colors <- colorRampPalette(brewer.pal(9, "Set3"))(42)
umap_limma_coef <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = coef)) +
geom_point(alpha = 0.8, size = 1.5) +
#scale_color_viridis_d()+
scale_color_manual(values = custom_colors) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of Genes by logFC across Conditions", color = "Group (coef)")+
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_coef
custom_colors <- colorRampPalette(brewer.pal(9, "Set3"))(70)
# Plot 3: coef
umap_limma_coef <- ggplot(umap_df, aes(x = UMAP1, y = UMAP2, color = coef)) +
geom_point(alpha = 0.8, size = 1.5) +
#scale_color_viridis_d()+
scale_color_manual(values = custom_colors) +
theme_bw(base_size = 10) +
labs(color = "Mean logFC", title = "UMAP of Genes by logFC across Conditions", color = "Group (coef)")+
theme(panel.grid = element_blank(), legend.position = "bottom")
umap_limma_coef
# save csv
write.csv(umap_df, file.path(output_dir, "umap_results_genes.csv"), row.names = FALSE)
output_dir_umap <- "/Users/felix/Dropbox (HMS)/Felix/Harvard/03_LSD-PD/Proteomics/d50_diff132/day50/LinReg/umap"
dir.create(output_dir, showWarnings = FALSE, recursive = TRUE)
dir.create(output_dir, showWarnings = FALSE, recursive = TRUE)
write.csv(umap_df, file.path(output_dir_umap , "umap_results_genes.csv"), row.names = FALSE)
output_dir_umap <- "/Users/felix/Dropbox (HMS)/Felix/Harvard/03_LSD-PD/Proteomics/d50_diff132/day50/LinReg/umap"
dir.create(output_dir_umap, showWarnings = FALSE, recursive = TRUE)
# save csv
write.csv(umap_df, file.path(output_dir_umap , "umap_results_genes.csv"), row.names = FALSE)
